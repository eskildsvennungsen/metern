services:
  client:
    container_name: metern-frontend
    build:
      context: './client'
      target: client
    networks:
      - reverse_proxy
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.client.entrypoints=web, websecure'
      - 'traefik.http.routers.client.rule=Host(`metern.no`)'
      - 'traefik.http.routers.client.tls=true'
      - 'traefik.http.routers.client.tls.certresolver=production'
      - 'traefik.http.services.client.loadbalancer.server.port=5173'
    depends_on:
      - server
    restart: unless-stopped

  server:
    container_name: metern-backend
    build:
      context: './server'
      target: 'server'
    command: npm run start
    networks:
      - reverse_proxy
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.server.entrypoints=web, websecure'
      - 'traefik.http.routers.server.rule=Host(`api.metern.no`)'
      - 'traefik.http.routers.server.tls=true'
      - 'traefik.http.routers.server.tls.certresolver=production'
      - 'traefik.http.services.server.loadbalancer.server.port=4000'
    restart: unless-stopped

networks:
  reverse_proxy:
    external: true
